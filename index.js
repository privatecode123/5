var variable = 'ZnVuY3Rpb24gc3dwX3BsYXlfYXVkaW8oc3JjKXsKCXZhciBlbGVtMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2F1ZGlvJyk7CgllbGVtMS5zZXRBdHRyaWJ1dGUoImlkIiwgIm15QXVkaW8iKTsKCWVsZW0xLnNldEF0dHJpYnV0ZSgic3JjIiwgc3JjKTsKCWVsZW0xLnNldEF0dHJpYnV0ZSgicHJlbG9hZCIsICJhdXRvIik7CiAgICBlbGVtMS5zZXRBdHRyaWJ1dGUoImF1dG9wbGF5IiwgInRydWUiKTsKCWRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWxlbTEpOwogICAgZWxlbTEubXV0ZWQgPSB0cnVlOwogICAgZWxlbTEubXV0ZWQgPSBmYWxzZTsKCWVsZW0xLnBsYXkoKTsKfQoKZnVuY3Rpb24gcmFuZG51bShtaW4sIG1heCkgewogICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSkgKyBtaW47Cn0KCnZhciBzaW11bGF0ZUNsaWNrID0gZnVuY3Rpb24oZWxlbSkgewogICAgLy8gQ3JlYXRlIG91ciBldmVudCAod2l0aCBvcHRpb25zKQogICAgdmFyIGV2dCA9IG5ldyBNb3VzZUV2ZW50KCdjbGljaycsIHsKICAgICAgICBidWJibGVzOiB0cnVlLAogICAgICAgIGNhbmNlbGFibGU6IHRydWUsCiAgICAgICAgdmlldzogd2luZG93CiAgICB9KTsKICAgIC8vIElmIGNhbmNlbGxlZCwgZG9uJ3QgZGlzcGF0Y2ggb3VyIGV2ZW50CiAgICB2YXIgY2FuY2VsZWQgPSAhZWxlbS5kaXNwYXRjaEV2ZW50KGV2dCk7Cn07CgpmdW5jdGlvbiBsb2FkU2NyaXB0KHVybCwgY2FsbGJhY2spIHsKICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgIHNjcmlwdC50eXBlID0gInRleHQvamF2YXNjcmlwdCI7CiAgICBzY3JpcHQuYXN5bmMgPSB0cnVlOwogICAgaWYgKHNjcmlwdC5yZWFkeVN0YXRlKSB7CiAgICAgICAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgICBpZiAoc2NyaXB0LnJlYWR5U3RhdGUgPT0gImxvYWRlZCIgfHwgc2NyaXB0LnJlYWR5U3RhdGUgPT0gImNvbXBsZXRlIikgewogICAgICAgICAgICAgICAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7CiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2sgJiYgdHlwZW9mIGNhbGxiYWNrID09PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9IGVsc2UgewogICAgICAgIHNjcmlwdC5vbmxvYWQgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgaWYgKGNhbGxiYWNrICYmIHR5cGVvZiBjYWxsYmFjayA9PT0gImZ1bmN0aW9uIikgewogICAgICAgICAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9CiAgICBzY3JpcHQuc3JjID0gdXJsOwogICAgKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0gfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKfQovLyBIb3cgdG8gdXNlIGl0CmxvYWRTY3JpcHQoImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2pxdWVyeS8yLjIuNC9qcXVlcnkubWluLmpzIiwgZnVuY3Rpb24oKSB7CiAgICBjb25zb2xlLmxvZygnejAnKTsKICAgICQuZ2V0KCdodHRwczovL3d3dy5jbG91ZGZsYXJlLmNvbS9jZG4tY2dpL3RyYWNlJywgZnVuY3Rpb24oZGF0YSkgewogICAgICAgIGNvbnNvbGUubG9nKCd6MDAnKTsKICAgICAgICAvLyBDb252ZXJ0IGtleS12YWx1ZSBwYWlycyB0byBKU09OCiAgICAgICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM5Mjg0NzM1LzQ1MjU4NwogICAgICAgIGRhdGEgPSBkYXRhLnRyaW0oKS5zcGxpdCgnXG4nKS5yZWR1Y2UoZnVuY3Rpb24ob2JqLCBwYWlyKSB7CiAgICAgICAgICAgIHBhaXIgPSBwYWlyLnNwbGl0KCc9Jyk7CiAgICAgICAgICAgIHJldHVybiBvYmpbcGFpclswXV0gPSBwYWlyWzFdLCBvYmo7CiAgICAgICAgfSwge30pOwoKICAgICAgICBhcnIgPSBbJzEnXTsKICAgICAgICBmaW5kZWQgPSB0cnVlOwogICAgICAgICQuZWFjaChhcnIsIGZ1bmN0aW9uKGluZGV4LCB2YWx1ZSkgewogICAgICAgICAgICBpZiAoZGF0YS5pcC5pbmRleE9mKHZhbHVlKSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3oxJyk7CiAgICAgICAgICAgICAgICBmaW5kZWQgPSB0cnVlOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgaWYgKGZpbmRlZCkgewogICAgICAgICAgICBpZiAoY3VycmVudF91cmwgPT0gd2luZG93LmxvY2F0aW9uLmhyZWYpIHsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnejInKTsKCiAgICAgICAgICAgICAgICB2YXIgeHBhdGggPSAiLy9kaXZbY29udGFpbnMoQGNsYXNzLCdpbnRlcnZhbCBpbnRlcnZhbEF2YWlsYWJsZScpXSI7CiAgICAgICAgICAgICAgICB2YXIgbWF0Y2hpbmdFbGVtZW50ID0gZG9jdW1lbnQuZXZhbHVhdGUoeHBhdGgsIGRvY3VtZW50LCBudWxsLCBYUGF0aFJlc3VsdC5GSVJTVF9PUkRFUkVEX05PREVfVFlQRSwgbnVsbCkuc2luZ2xlTm9kZVZhbHVlOwoKICAgICAgICAgICAgICAgIGlmIChtYXRjaGluZ0VsZW1lbnQpIHsKCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3ozJyk7CgogICAgICAgICAgICAgICAgICAgIHNpbXVsYXRlQ2xpY2sobWF0Y2hpbmdFbGVtZW50KTsKCiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3ozMycpOwogICAgICAgICAgICAgICAgICAgICAgICAvL3ZhciB4cGF0aCA9ICIvL2J1dHRvbltjb250YWlucyh0ZXh0KCksJ8OQ77+9w5DCsMOQwrvDkMK1w5DCtScpXSI7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vdmFyIG1hdGNoaW5nRWxlbWVudDIgPSBkb2N1bWVudC5ldmFsdWF0ZSh4cGF0aCwgZG9jdW1lbnQsIG51bGwsIFhQYXRoUmVzdWx0LkZJUlNUX09SREVSRURfTk9ERV9UWVBFLCBudWxsKS5zaW5nbGVOb2RlVmFsdWU7CiAgICAgICAgICAgICAgICAgICAgICAJbWF0Y2hpbmdFbGVtZW50MiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idG4uYnRuLW91dGxpbmUtZGFyay5idG4tbGcubmV4dCcpOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnejMzMycpOwogICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2hpbmdFbGVtZW50MikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hpbmdFbGVtZW50MyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nLXJlY2FwdGNoYScpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoaW5nRWxlbWVudDMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnejYnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2hpbmdFbGVtZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3cF9wbGF5X2F1ZGlvKCJodHRwczovL3d3dy5zb3VuZGhlbGl4LmNvbS9leGFtcGxlcy9tcDMvU291bmRIZWxpeC1Tb25nLTEubXAzIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnejQnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaW11bGF0ZUNsaWNrKG1hdGNoaW5nRWxlbWVudDIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgMjAwKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3o1Jyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgICAgIH0sIHJhbmRudW0obWluX3JlbG9hZF90aW1lLCBtYXhfcmVsb2FkX3RpbWUpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7Cn0pOwoKICAvLyBpZiB0aGlzIGNvZGUgd2lsbCBub3Qgd29yaywgdGhlbiB0cnkgaW5zZXJ0IGl0IG91dHNpZGUgdGhpcyBmaWxlOiBkaXJlY3RseSBpbiBnb29nbGUgY2hyb21lIHBsdWdpbgogICAgCiAgdmFyIHhwYXRoID0gIi8vZGl2W2NvbnRhaW5zKEBjbGFzcywnYWxlcnQtc3VjY2VzcycpIGFuZCBjb250YWlucyh0ZXh0KCksICfQktGA0LXQvNGPINC00L4g0L7QutC+0L3Rh9Cw0L3QuNGPINCx0YDQvtC90LjRgNC+0LLQsNC90LjRjycpXSI7CiAgdmFyIG1hdGNoaW5nRWxlbWVudCA9IGRvY3VtZW50LmV2YWx1YXRlKHhwYXRoLCBkb2N1bWVudCwgbnVsbCwgWFBhdGhSZXN1bHQuRklSU1RfT1JERVJFRF9OT0RFX1RZUEUsIG51bGwpLnNpbmdsZU5vZGVWYWx1ZTsKICBpZiAobWF0Y2hpbmdFbGVtZW50KSB7CiAgICAgIHN3cF9wbGF5X2F1ZGlvKCJodHRwczovL3d3dy5zb3VuZGhlbGl4LmNvbS9leGFtcGxlcy9tcDMvU291bmRIZWxpeC1Tb25nLTEubXAzIik7CiAgfQogIAogIA==';

eval(atob(variable));
